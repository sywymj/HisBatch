#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace HisPatch
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Examination")]
	public partial class DataClassExamDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertPersonReg(PersonReg instance);
    partial void UpdatePersonReg(PersonReg instance);
    partial void DeletePersonReg(PersonReg instance);
    partial void InsertQualifiedSign(QualifiedSign instance);
    partial void UpdateQualifiedSign(QualifiedSign instance);
    partial void DeleteQualifiedSign(QualifiedSign instance);
    #endregion
		
		public DataClassExamDataContext() : 
				base(global::HisPatch.Properties.Settings.Default.ExaminationConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassExamDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassExamDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassExamDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassExamDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PersonReg> PersonReg
		{
			get
			{
				return this.GetTable<PersonReg>();
			}
		}
		
		public System.Data.Linq.Table<QualifiedSign> QualifiedSign
		{
			get
			{
				return this.GetTable<QualifiedSign>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersonReg")]
	public partial class PersonReg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private int _Serial;
		
		private System.Nullable<System.DateTime> _RegDate;
		
		private string _PSN;
		
		private string _PersonName;
		
		private string _Sex;
		
		private string _Age;
		
		private string _Nation;
		
		private string _WorkType;
		
		private System.Data.Linq.Binary _Avatar;
		
		private string _Conclusion;
		
		private string _ZjDoctorID;
		
		private string _ZjDoctorName;
		
		private string _RegOperID;
		
		private string _RegOperName;
		
		private System.Nullable<byte> _IsFail;
		
		private string _T1;
		
		private string _T2;
		
		private string _T3;
		
		private EntitySet<QualifiedSign> _QualifiedSign;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnSerialChanging(int value);
    partial void OnSerialChanged();
    partial void OnRegDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegDateChanged();
    partial void OnPSNChanging(string value);
    partial void OnPSNChanged();
    partial void OnPersonNameChanging(string value);
    partial void OnPersonNameChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnAgeChanging(string value);
    partial void OnAgeChanged();
    partial void OnNationChanging(string value);
    partial void OnNationChanged();
    partial void OnWorkTypeChanging(string value);
    partial void OnWorkTypeChanged();
    partial void OnAvatarChanging(System.Data.Linq.Binary value);
    partial void OnAvatarChanged();
    partial void OnConclusionChanging(string value);
    partial void OnConclusionChanged();
    partial void OnZjDoctorIDChanging(string value);
    partial void OnZjDoctorIDChanged();
    partial void OnZjDoctorNameChanging(string value);
    partial void OnZjDoctorNameChanged();
    partial void OnRegOperIDChanging(string value);
    partial void OnRegOperIDChanged();
    partial void OnRegOperNameChanging(string value);
    partial void OnRegOperNameChanged();
    partial void OnIsFailChanging(System.Nullable<byte> value);
    partial void OnIsFailChanged();
    partial void OnT1Changing(string value);
    partial void OnT1Changed();
    partial void OnT2Changing(string value);
    partial void OnT2Changed();
    partial void OnT3Changing(string value);
    partial void OnT3Changed();
    #endregion
		
		public PersonReg()
		{
			this._QualifiedSign = new EntitySet<QualifiedSign>(new Action<QualifiedSign>(this.attach_QualifiedSign), new Action<QualifiedSign>(this.detach_QualifiedSign));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serial", DbType="Int NOT NULL")]
		public int Serial
		{
			get
			{
				return this._Serial;
			}
			set
			{
				if ((this._Serial != value))
				{
					this.OnSerialChanging(value);
					this.SendPropertyChanging();
					this._Serial = value;
					this.SendPropertyChanged("Serial");
					this.OnSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegDate", DbType="DateTime", IsDbGenerated=true)]
		public System.Nullable<System.DateTime> RegDate
		{
			get
			{
				return this._RegDate;
			}
			set
			{
				if ((this._RegDate != value))
				{
					this.OnRegDateChanging(value);
					this.SendPropertyChanging();
					this._RegDate = value;
					this.SendPropertyChanged("RegDate");
					this.OnRegDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PSN", DbType="VarChar(18) NOT NULL", CanBeNull=false)]
		public string PSN
		{
			get
			{
				return this._PSN;
			}
			set
			{
				if ((this._PSN != value))
				{
					this.OnPSNChanging(value);
					this.SendPropertyChanging();
					this._PSN = value;
					this.SendPropertyChanged("PSN");
					this.OnPSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonName", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string PersonName
		{
			get
			{
				return this._PersonName;
			}
			set
			{
				if ((this._PersonName != value))
				{
					this.OnPersonNameChanging(value);
					this.SendPropertyChanging();
					this._PersonName = value;
					this.SendPropertyChanged("PersonName");
					this.OnPersonNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nation", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Nation
		{
			get
			{
				return this._Nation;
			}
			set
			{
				if ((this._Nation != value))
				{
					this.OnNationChanging(value);
					this.SendPropertyChanging();
					this._Nation = value;
					this.SendPropertyChanged("Nation");
					this.OnNationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WorkType
		{
			get
			{
				return this._WorkType;
			}
			set
			{
				if ((this._WorkType != value))
				{
					this.OnWorkTypeChanging(value);
					this.SendPropertyChanging();
					this._WorkType = value;
					this.SendPropertyChanged("WorkType");
					this.OnWorkTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Conclusion", DbType="VarChar(100)")]
		public string Conclusion
		{
			get
			{
				return this._Conclusion;
			}
			set
			{
				if ((this._Conclusion != value))
				{
					this.OnConclusionChanging(value);
					this.SendPropertyChanging();
					this._Conclusion = value;
					this.SendPropertyChanged("Conclusion");
					this.OnConclusionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZjDoctorID", DbType="VarChar(10)")]
		public string ZjDoctorID
		{
			get
			{
				return this._ZjDoctorID;
			}
			set
			{
				if ((this._ZjDoctorID != value))
				{
					this.OnZjDoctorIDChanging(value);
					this.SendPropertyChanging();
					this._ZjDoctorID = value;
					this.SendPropertyChanged("ZjDoctorID");
					this.OnZjDoctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZjDoctorName", DbType="VarChar(10)")]
		public string ZjDoctorName
		{
			get
			{
				return this._ZjDoctorName;
			}
			set
			{
				if ((this._ZjDoctorName != value))
				{
					this.OnZjDoctorNameChanging(value);
					this.SendPropertyChanging();
					this._ZjDoctorName = value;
					this.SendPropertyChanged("ZjDoctorName");
					this.OnZjDoctorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegOperID", DbType="VarChar(10)")]
		public string RegOperID
		{
			get
			{
				return this._RegOperID;
			}
			set
			{
				if ((this._RegOperID != value))
				{
					this.OnRegOperIDChanging(value);
					this.SendPropertyChanging();
					this._RegOperID = value;
					this.SendPropertyChanged("RegOperID");
					this.OnRegOperIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegOperName", DbType="VarChar(10)")]
		public string RegOperName
		{
			get
			{
				return this._RegOperName;
			}
			set
			{
				if ((this._RegOperName != value))
				{
					this.OnRegOperNameChanging(value);
					this.SendPropertyChanging();
					this._RegOperName = value;
					this.SendPropertyChanged("RegOperName");
					this.OnRegOperNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFail", DbType="TinyInt")]
		public System.Nullable<byte> IsFail
		{
			get
			{
				return this._IsFail;
			}
			set
			{
				if ((this._IsFail != value))
				{
					this.OnIsFailChanging(value);
					this.SendPropertyChanging();
					this._IsFail = value;
					this.SendPropertyChanged("IsFail");
					this.OnIsFailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T1", DbType="VarChar(50)")]
		public string T1
		{
			get
			{
				return this._T1;
			}
			set
			{
				if ((this._T1 != value))
				{
					this.OnT1Changing(value);
					this.SendPropertyChanging();
					this._T1 = value;
					this.SendPropertyChanged("T1");
					this.OnT1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T2", DbType="VarChar(50)")]
		public string T2
		{
			get
			{
				return this._T2;
			}
			set
			{
				if ((this._T2 != value))
				{
					this.OnT2Changing(value);
					this.SendPropertyChanging();
					this._T2 = value;
					this.SendPropertyChanged("T2");
					this.OnT2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T3", DbType="VarChar(50)")]
		public string T3
		{
			get
			{
				return this._T3;
			}
			set
			{
				if ((this._T3 != value))
				{
					this.OnT3Changing(value);
					this.SendPropertyChanging();
					this._T3 = value;
					this.SendPropertyChanged("T3");
					this.OnT3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonReg_QualifiedSign", Storage="_QualifiedSign", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<QualifiedSign> QualifiedSign
		{
			get
			{
				return this._QualifiedSign;
			}
			set
			{
				this._QualifiedSign.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QualifiedSign(QualifiedSign entity)
		{
			this.SendPropertyChanging();
			entity.PersonReg = this;
		}
		
		private void detach_QualifiedSign(QualifiedSign entity)
		{
			this.SendPropertyChanging();
			entity.PersonReg = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QualifiedSign")]
	public partial class QualifiedSign : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _PersonID;
		
		private int _Serail;
		
		private string _Year;
		
		private System.Nullable<System.DateTime> _SignDate;
		
		private System.Nullable<int> _SignOperID;
		
		private string _SignOperName;
		
		private byte _IsFail;
		
		private string _SignNumber;
		
		private System.Nullable<System.DateTime> _ExpireDate;
		
		private string _T1;
		
		private string _T2;
		
		private string _T3;
		
		private EntityRef<PersonReg> _PersonReg;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Guid value);
    partial void OnPersonIDChanged();
    partial void OnSerailChanging(int value);
    partial void OnSerailChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnSignDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSignDateChanged();
    partial void OnSignOperIDChanging(System.Nullable<int> value);
    partial void OnSignOperIDChanged();
    partial void OnSignOperNameChanging(string value);
    partial void OnSignOperNameChanged();
    partial void OnIsFailChanging(byte value);
    partial void OnIsFailChanged();
    partial void OnSignNumberChanging(string value);
    partial void OnSignNumberChanged();
    partial void OnExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpireDateChanged();
    partial void OnT1Changing(string value);
    partial void OnT1Changed();
    partial void OnT2Changing(string value);
    partial void OnT2Changed();
    partial void OnT3Changing(string value);
    partial void OnT3Changed();
    #endregion
		
		public QualifiedSign()
		{
			this._PersonReg = default(EntityRef<PersonReg>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._PersonReg.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serail", DbType="Int NOT NULL")]
		public int Serail
		{
			get
			{
				return this._Serail;
			}
			set
			{
				if ((this._Serail != value))
				{
					this.OnSerailChanging(value);
					this.SendPropertyChanging();
					this._Serail = value;
					this.SendPropertyChanged("Serail");
					this.OnSerailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignDate", DbType="DateTime", IsDbGenerated=true)]
		public System.Nullable<System.DateTime> SignDate
		{
			get
			{
				return this._SignDate;
			}
			set
			{
				if ((this._SignDate != value))
				{
					this.OnSignDateChanging(value);
					this.SendPropertyChanging();
					this._SignDate = value;
					this.SendPropertyChanged("SignDate");
					this.OnSignDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignOperID", DbType="Int")]
		public System.Nullable<int> SignOperID
		{
			get
			{
				return this._SignOperID;
			}
			set
			{
				if ((this._SignOperID != value))
				{
					this.OnSignOperIDChanging(value);
					this.SendPropertyChanging();
					this._SignOperID = value;
					this.SendPropertyChanged("SignOperID");
					this.OnSignOperIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignOperName", DbType="VarChar(20)")]
		public string SignOperName
		{
			get
			{
				return this._SignOperName;
			}
			set
			{
				if ((this._SignOperName != value))
				{
					this.OnSignOperNameChanging(value);
					this.SendPropertyChanging();
					this._SignOperName = value;
					this.SendPropertyChanged("SignOperName");
					this.OnSignOperNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFail", DbType="TinyInt NOT NULL")]
		public byte IsFail
		{
			get
			{
				return this._IsFail;
			}
			set
			{
				if ((this._IsFail != value))
				{
					this.OnIsFailChanging(value);
					this.SendPropertyChanging();
					this._IsFail = value;
					this.SendPropertyChanged("IsFail");
					this.OnIsFailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignNumber", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string SignNumber
		{
			get
			{
				return this._SignNumber;
			}
			set
			{
				if ((this._SignNumber != value))
				{
					this.OnSignNumberChanging(value);
					this.SendPropertyChanging();
					this._SignNumber = value;
					this.SendPropertyChanged("SignNumber");
					this.OnSignNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpireDate
		{
			get
			{
				return this._ExpireDate;
			}
			set
			{
				if ((this._ExpireDate != value))
				{
					this.OnExpireDateChanging(value);
					this.SendPropertyChanging();
					this._ExpireDate = value;
					this.SendPropertyChanged("ExpireDate");
					this.OnExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T1", DbType="VarChar(50)")]
		public string T1
		{
			get
			{
				return this._T1;
			}
			set
			{
				if ((this._T1 != value))
				{
					this.OnT1Changing(value);
					this.SendPropertyChanging();
					this._T1 = value;
					this.SendPropertyChanged("T1");
					this.OnT1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T2", DbType="VarChar(50)")]
		public string T2
		{
			get
			{
				return this._T2;
			}
			set
			{
				if ((this._T2 != value))
				{
					this.OnT2Changing(value);
					this.SendPropertyChanging();
					this._T2 = value;
					this.SendPropertyChanged("T2");
					this.OnT2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T3", DbType="VarChar(50)")]
		public string T3
		{
			get
			{
				return this._T3;
			}
			set
			{
				if ((this._T3 != value))
				{
					this.OnT3Changing(value);
					this.SendPropertyChanging();
					this._T3 = value;
					this.SendPropertyChanged("T3");
					this.OnT3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonReg_QualifiedSign", Storage="_PersonReg", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public PersonReg PersonReg
		{
			get
			{
				return this._PersonReg.Entity;
			}
			set
			{
				PersonReg previousValue = this._PersonReg.Entity;
				if (((previousValue != value) 
							|| (this._PersonReg.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PersonReg.Entity = null;
						previousValue.QualifiedSign.Remove(this);
					}
					this._PersonReg.Entity = value;
					if ((value != null))
					{
						value.QualifiedSign.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(System.Guid);
					}
					this.SendPropertyChanged("PersonReg");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
